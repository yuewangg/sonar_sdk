/*
    This file has been generated by bvtidl.pl. DO NOT MODIFY!
*/
#ifndef __BVTSONARDISCOVERYAGENT_H__
#define __BVTSONARDISCOVERYAGENT_H__

#include <bvt_c/bvt_retval.h>

#ifndef DOXY_IGNORE
#ifdef _WIN32
#	ifdef BUILDING_BVTSDK
#		define BVTSDK_EXPORT __declspec(dllexport)
#	else
#		define BVTSDK_EXPORT __declspec(dllimport)
#	endif
#	if !defined(BVTSDK_NO_DEPRECATE) && _MSC_VER >= 1310
#		define BVTSDK_EXPORT_OBSOLETE BVTSDK_EXPORT __declspec(deprecated("This will be removed in a future version of the BlueView SDK"))
#	else
#		define BVTSDK_EXPORT_OBSOLETE BVTSDK_EXPORT
#	endif
#else
#	if __GNUC__ >= 4
#		define BVTSDK_EXPORT __attribute__ ((visibility ("default")))
#	else
#		define BVTSDK_EXPORT
#	endif
#	if !defined(BVTSDK_NO_DEPRECATE) && ((__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 1)))
#		define BVTSDK_EXPORT_OBSOLETE BVT_EXPORT __attribute__((__deprecated__("This will be removed in a future version of the BlueView SDK")))
#	else
#		define BVTSDK_EXPORT_OBSOLETE BVTSDK_EXPORT
#	endif
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

/** @file
 * @defgroup BVTSonarDiscoveryAgent BVTSonarDiscoveryAgent
 * @brief
 * The SonarDiscoveryAgent is used to discover any BlueView
 * sonars resident on a network.
 * @{
*/

/** Opaque type for BVTSonarDiscoveryAgent object instances */
typedef struct BVTOpaqueSonarDiscoveryAgent* BVTSonarDiscoveryAgent;

/** Create a BVTSonarDiscoveryAgent object */
BVTSDK_EXPORT BVTSonarDiscoveryAgent BVTSonarDiscoveryAgent_Create();
/** Destroy a BVTSonarDiscoveryAgent object
 *  @param obj Object pointer
*/
BVTSDK_EXPORT void BVTSonarDiscoveryAgent_Destroy(BVTSonarDiscoveryAgent obj);

/** Causes the SonarDiscoveryAgent to begin probing the network for sonars.
 * @param self Object pointer
 */
BVTSDK_EXPORT RetVal BVTSonarDiscoveryAgent_Start(BVTSonarDiscoveryAgent self);

/** Causes the SonarDiscoveryAgent to stop probing for sonars.
 * @param self Object pointer
 */
BVTSDK_EXPORT RetVal BVTSonarDiscoveryAgent_Stop(BVTSonarDiscoveryAgent self);

/** Get the number of sonars discovered on the network.
 * @param self Object pointer
 * @param sonar_count Number of sonars discovered 
 * @returns sonar_count

 */
BVTSDK_EXPORT RetVal BVTSonarDiscoveryAgent_GetSonarCount(BVTSonarDiscoveryAgent self, int* sonar_count);

/** Returns the host IP address (as a null-terminated string) for the specified sonar.
 * The sonar_index parameter is zero-based, that is, if @ref BVTSonarDiscoveryAgent_GetSonarCount returned a value of 3, then valid sonar_index values are 0, 1, and 2.
 * A buffer size of 20 characters should be sufficient for the buffer.
 * @param self Object pointer
 * @param sonar_index Which sonar to return information about 
 * @param buffer buffer to hold the null-terminated string to be passed back 
 * @returns buffer

 * @param buffer_size total number of characters the passed buffer can hold 
 */
BVTSDK_EXPORT RetVal BVTSonarDiscoveryAgent_GetSonarInfo(BVTSonarDiscoveryAgent self, int sonar_index, char* buffer, int buffer_size);

/** @}*/

#ifdef __cplusplus
}
#endif

#endif
