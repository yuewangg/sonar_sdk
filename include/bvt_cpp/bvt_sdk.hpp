/*
    This file has been generated by bvtidl.pl. DO NOT MODIFY!
*/

#ifndef __CPP_BVTSDK_HPP__
#define __CPP_BVTSDK_HPP__

#include <string>
#ifdef _WIN32
#   include <memory>
#else
#   include <cstddef>
#   if defined (__GLIBCXX__) && __cplusplus <= 199711L
#      include <tr1/memory>
       namespace std {
          using std::tr1::shared_ptr;
       }
#   else
#       include <memory>
#   endif
#endif
#include <bvt_cpp/bvt_retval.hpp>
#include <bvt_cpp/bvt_error.hpp>

namespace BVTSDK
{

    /// <summary>
    /// Global initialization and cleanup functions.
    /// <summary>
    class SDK
    {
    public:
    public:
        //
        // Perform initialization of the SDK.
        //      
        static void Init()
        {
            BVTSDK_Init();
        }

        //
        // Cleans up various SDK structures.
        //      
        static void Shutdown()
        {
            BVTSDK_Shutdown();
        }

        //
        // Return the major version number of the SDK.
        //      
        static int MajorVersion()
        {
            return BVTSDK_MajorVersion();
        }

        //
        // Return the minor version of the SDK.
        //      
        static int MinorVersion()
        {
            return BVTSDK_MinorVersion();
        }

        //
        // Return the build number of the SDK.
        //      
        static int BuildNumber()
        {
            return BVTSDK_BuildNumber();
        }

    };

}

#endif
